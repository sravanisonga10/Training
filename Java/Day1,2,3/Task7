a) Implement a function called BruteForceSort that sorts an array using the brute force approach. Use this function to sort an array created with InitializeArray.


public class BruteForceSort {
    public static void main(String[] args) {
        int[] array = initializeArray(10);
        System.out.println("Original array:");
        printArray(array);

        bruteForceSort(array);

        System.out.println("\nSorted array:");
        printArray(array);
    }

    
    public static int[] initializeArray(int size) {
        int[] array = new int[size];
        for (int i = 0; i < size; i++) {
            array[i] = (int) (Math.random() * 100); 
        }
        return array;
    }

    public static void printArray(int[] array) {
        for (int num : array) {
            System.out.print(num + " ");
        }
        System.out.println();
    }

    public static void bruteForceSort(int[] array) {
    boolean sorted = false;
        while (!sorted) {
            sorted = true; // Assume array is sorted
            for (int i = 0; i < array.length - 1; i++) {
                if (array[i] > array[i + 1]) {
                    int temp = array[i];
                    array[i] = array[i + 1];
                    array[i + 1] = temp;
                    sorted = false; 
             }
         }
        }
}
}



b) Write a function named PerformLinearSearch that searches for a specific element in an array and returns the index of the element if found or -1 if not found.

public class LinearSearch {
    public static void main(String[] args) {
        int[] array = {4, 2, 7, 1, 9, 5};
        int target = 7;

        int index = performLinearSearch(array, target);
        if (index != -1) {
            System.out.println("Element " + target + " found at index: " + index);
        } else {
            System.out.println("Element " + target + " not found in the array.");
        }
    }

    public static int performLinearSearch(int[] array, int target) {
        for (int i = 0; i < array.length; i++) {
            if (array[i] == target) {
                return i; 
            }
        }
        return -1; 
    }
}
